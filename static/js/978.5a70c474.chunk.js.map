{"version":3,"file":"static/js/978.5a70c474.chunk.js","mappings":"kJAaA,IAVwB,SAAHA,GAA0B,IAApBC,EAAQD,EAARC,SAAUC,EAAEF,EAAFE,GACjC,OACIC,EAAAA,EAAAA,KAACC,EAAAA,GAAI,CAACC,GAAE,GAAAC,OAAKJ,GAAKD,UACdE,EAAAA,EAAAA,KAACI,EAAAA,EAAM,CAACC,QAAQ,WAAWC,MAAM,UAASR,SACrCA,KAIjB,C,kKCVA,EAAyB,+B,SCmEzB,EA1DuB,WACnB,IAAAS,GAAsCC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA3CI,EAAWF,EAAA,GAAEG,EAAcH,EAAA,GAClCI,GAAgCL,EAAAA,EAAAA,UAAS,IAAGM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAArCE,EAAQD,EAAA,GAAEE,EAAWF,EAAA,GAC5BG,GAAoCT,EAAAA,EAAAA,UAAS,IAAGU,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAAzCE,EAAUD,EAAA,GAAEE,EAAaF,EAAA,GAChCG,GAAwBb,EAAAA,EAAAA,UAAS,GAAEc,GAAAZ,EAAAA,EAAAA,GAAAW,EAAA,GAA5BE,EAAID,EAAA,GAAEE,EAAOF,EAAA,GACdG,GAAWC,EAAAA,EAAAA,MAIXC,EAAoB,SAAAC,GAEtB,OADeA,EAAIC,KAAI,SAACC,EAAIC,GAAC,OAAMA,EAAI,IAAM,EAAIH,EAAII,MAAMD,EAAGA,EAAI,GAAK,IAAI,IAAGE,QAAO,SAAAH,GAAE,OAAIA,CAAE,GAEjG,GAEAI,EAAAA,EAAAA,YAAU,WACNT,GAASU,EAAAA,EAAAA,IAAmB,YAAYC,MAAK,SAAAvC,GAAkB,IAAfwC,EAAOxC,EAAPwC,QACtCC,EAASX,EAAkBU,GACjCzB,EAAeyB,GACfjB,EAAckB,EAClB,GACJ,GAAG,CAACb,IAEJ,IAIIc,EAA2B,GAC3BxB,GAAYI,KACZoB,EAA2BxB,EAASyB,QAAUrB,EAAWqB,QAY7D,OACIC,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAA5C,SAAA,EACIE,EAAAA,EAAAA,KAAA,OAAK2C,UAAWC,EAAW9C,UACvBE,EAAAA,EAAAA,KAAC6C,EAAAA,EAAW,CAACC,MAAO,WAAYb,OApC1B,CAAC,MAAO,MAAO,aAoC8Bc,YAZ3C,SAAAC,GAChBC,QAAQC,IAAIF,GACZ,IAAMG,EAAexC,EAAYsB,QAAO,SAAAH,GAAE,OAAIA,EAAGsB,gBAAkBJ,CAAM,IACnEV,EAASX,EAAkBwB,GAEjCnC,EAAYsB,GACZW,QAAQC,IAAIZ,EAAOf,EAAO,GAC9B,OAOQvB,EAAAA,EAAAA,KAACqD,EAAAA,EAAS,CAACC,YAAavC,EAASQ,EAAO,IAAMJ,EAAWI,EAAO,IAAMZ,EAAYb,UAC9EE,EAAAA,EAAAA,KAACuD,EAAAA,EAAmB,CAAAzD,UAChBE,EAAAA,EAAAA,KAACwD,EAAAA,EAAe,CAAA1D,SAAC,sBAGzBE,EAAAA,EAAAA,KAACyD,EAAAA,EAAc,CACXC,4BAA6BnB,EAC7BoB,mBA9Be,SAAAC,GACvBpC,EAAQoC,EACZ,MAgCJ,C","sources":["components/LinkViewProfile/LinkViewProfile.jsx","webpack://MedDoc-front/./src/pages/DoctorMain/ListOfPatients/ListOfPatients.module.css?8d8e","pages/DoctorMain/ListOfPatients/ListOfPatients.jsx"],"sourcesContent":["import { Button } from '@mui/material';\nimport { Link } from 'react-router-dom';\n\nconst LinkViewProfile = ({ children, id }) => {\n    return (\n        <Link to={`${id}`}>\n            <Button variant=\"outlined\" color=\"primary\">\n                {children}\n            </Button>\n        </Link>\n    );\n};\n\nexport default LinkViewProfile;\n","// extracted by mini-css-extract-plugin\nexport default {\"filter\":\"ListOfPatients_filter__qHovY\",\"filterArrowBox\":\"ListOfPatients_filterArrowBox__gtG1R\",\"filterArrow\":\"ListOfPatients_filterArrow__hjU00\",\"filterFilter\":\"ListOfPatients_filterFilter__bc4ST\",\"patientList\":\"ListOfPatients_patientList__EhaNc\"};","import BasicSelect from 'components/BasicSelect/BasicSelect';\nimport LinkViewProfile from 'components/LinkViewProfile/LinkViewProfile';\nimport { PagePagination } from 'components/PagePagination/PagePagination';\nimport { ProfileBlockPatient } from 'components/ProfileBlockPatient/ProfileBlockPatient';\nimport UsersList from 'components/UsersList/UsersList';\nimport { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { getAllUsersForRole } from 'redux/info/operation';\nimport css from './ListOfPatients.module.css';\n\nconst ListOfPatients = () => {\n    const [allPatients, setAllPatients] = useState([]);\n    const [filtered, setFiltered] = useState([]);\n    const [pagination, setPagination] = useState([]);\n    const [page, setPage] = useState(1);\n    const dispatch = useDispatch();\n\n    const frequency = ['All', 'New', 'Permanent'];\n\n    const paginationDoctors = arr => {\n        const result = arr.map((el, i) => (i % 9 === 0 ? arr.slice(i, i + 9) : null)).filter(el => el);\n        return result;\n    };\n\n    useEffect(() => {\n        dispatch(getAllUsersForRole('Patient')).then(({ payload }) => {\n            const result = paginationDoctors(payload);\n            setAllPatients(payload);\n            setPagination(result);\n        });\n    }, [dispatch]);\n\n    const handlePageOnVisits = data => {\n        setPage(data);\n    };\n\n    let numberOfPaginationButton = 0;\n    if (filtered || pagination) {\n        numberOfPaginationButton = filtered.length || pagination.length;\n    }\n\n    const sortDoctors = status => {\n        console.log(status);\n        const filterDoctor = allPatients.filter(el => el.patientStatus === status);\n        const result = paginationDoctors(filterDoctor);\n\n        setFiltered(result);\n        console.log(result[page - 1]);\n    };\n\n    return (\n        <>\n            <div className={css.filter}>\n                <BasicSelect title={'Patients'} filter={frequency} sortDoctors={sortDoctors} />\n            </div>\n            <UsersList listOfUsers={filtered[page - 1] || pagination[page - 1] || allPatients}>\n                <ProfileBlockPatient>\n                    <LinkViewProfile>view profile</LinkViewProfile>\n                </ProfileBlockPatient>\n            </UsersList>\n            <PagePagination\n                numberOfBtnsOnVisitsHistory={numberOfPaginationButton}\n                handlePageOnVisits={handlePageOnVisits}\n            />\n        </>\n    );\n};\n\nexport default ListOfPatients;\n"],"names":["_ref","children","id","_jsx","Link","to","concat","Button","variant","color","_useState","useState","_useState2","_slicedToArray","allPatients","setAllPatients","_useState3","_useState4","filtered","setFiltered","_useState5","_useState6","pagination","setPagination","_useState7","_useState8","page","setPage","dispatch","useDispatch","paginationDoctors","arr","map","el","i","slice","filter","useEffect","getAllUsersForRole","then","payload","result","numberOfPaginationButton","length","_jsxs","_Fragment","className","css","BasicSelect","title","sortDoctors","status","console","log","filterDoctor","patientStatus","UsersList","listOfUsers","ProfileBlockPatient","LinkViewProfile","PagePagination","numberOfBtnsOnVisitsHistory","handlePageOnVisits","data"],"sourceRoot":""}